        -:    0:Source:/home/ankush/CLionProjects/Problem_3_12/Account.cpp
        -:    0:Graph:/home/ankush/CLionProjects/Problem_3_12/cmake-build-debug-coverage/CMakeFiles/Problem_3_12.dir/Account.cpp.gcno
        -:    0:Data:/home/ankush/CLionProjects/Problem_3_12/cmake-build-debug-coverage/CMakeFiles/Problem_3_12.dir/Account.cpp.gcda
        -:    0:Runs:1
        -:    1://
        -:    2:// Created by ankush on 8/29/22.
        -:    3://
        -:    4:
        -:    5://Account.cpp
        -:    6://Account member-function definitions. This file contains
        -:    7:// implementations of the member function in Account.h
        -:    8:
        -:    9:#include <iostream>
        -:   10:#include "Account.h" // include definition of class Account
        -:   11:using namespace std;
        -:   12:
function _ZN7AccountC2Ei called 2 returned 100% blocks executed 100%
        2:   13:Account::Account(int balance)
        -:   14:{
        2:   15:    if ( balance >= 0)
        2:   15-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 1
        -:   16:    {
        1:   17:        accountBalance = balance ; // store the current balance in Account balance
        1:   17-block  0
        -:   18:    }
        2:   19:    if ( balance < 0)
        2:   19-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 1
        -:   20:    {
        1:   21:      accountBalance = 0;
        1:   22:      cout<<" Invalid Initial Balance"<<endl;   // error message
        1:   22-block  0
call    0 returned 1
call    1 returned 1
        -:   23:    }
        2:   24:}
        -:   25:
function _ZN7Account6creditEv called 2 returned 100% blocks executed 100%
        2:   26:void Account::credit ()
        -:   27:{
        -:   28:    int creditAmount;
        2:   29:    cout << "Enter the credit amount: ";
        2:   29-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   30:    cin >> creditAmount;
        2:   30-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   31:    accountBalance = accountBalance + creditAmount;   // adds credit amount
        2:   32:}
        2:   32-block  0
        -:   33:
function _ZN7Account5debitEv called 1 returned 100% blocks executed 89%
        1:   34:void Account::debit()
        -:   35:{
        -:   36:    int debitAmount;
        1:   37:    cout<<"Enter the debit amount: ";
        1:   37-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   38:    cin >> debitAmount;
        1:   38-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   39:    if  (debitAmount <= accountBalance )
        1:   39-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
    #####:   40:    accountBalance = accountBalance - debitAmount; // Subtracts debit amount
    %%%%%:   40-block  0
        1:   41:    if (debitAmount > accountBalance)
        1:   41-block  0
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        -:   42:    {
        1:   43:        cout<<"Debit Amount exceeded account balance."<<endl;  //error message
        1:   43-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   43-block  1
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        -:   44:    }
        1:   45:}
        1:   45-block  0
        -:   46:
function _ZN7Account10getBalanceEv called 2 returned 100% blocks executed 100%
        2:   47:int Account::getBalance()
        -:   48:{
        2:   49:    cout<<"The current balance is:"<<accountBalance<<endl;
        2:   49-block  0
call    0 returned 2
call    1 returned 2
call    2 returned 2
        2:   50:    return accountBalance; //returns account balance
        -:   51:}
